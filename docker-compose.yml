version: '3'
services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tradexpro_app
    restart: unless-stopped
    working_dir: /var/www
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT:-3307}
      DB_DATABASE: ${DB_DATABASE:-tradexpro}
      DB_USERNAME: ${DB_USERNAME:-tradexpro_user}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./:/var/www
    networks:
      - tradexpro
    depends_on:
      - db

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: tradexpro_nginx
    restart: unless-stopped
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - tradexpro
    depends_on:
      - app

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: tradexpro_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-tradexpro}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME:-tradexpro_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    command: --log-bin-trust-function-creators=1
    ports:
      - "3307:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - tradexpro

  # Redis Service
  redis:
    image: redis:alpine
    container_name: tradexpro_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    networks:
      - tradexpro

networks:
  tradexpro:
    driver: bridge

volumes:
  dbdata:
